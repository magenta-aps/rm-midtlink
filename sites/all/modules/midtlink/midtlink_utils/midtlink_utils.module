<?php
define('FLAG_ID_COMMENT_APPROVED',7);
define('FLAG_ID_COMMENT_ARCHIVED',8);

/* 
 * Implements hook_ctools_plugin_directory
 */
function midtlink_utils_ctools_plugin_directory($module, $plugin) {
  if ($module == 'entityreference') {
    return 'plugins/' . $plugin;
  }
}

/**
* Implements hook_facetapi_filters().
*/
function midtlink_utils_facetapi_filters() {
  return array(
    'midtlink_hide_global' => array(
      'handler' => array(
        'label' => t('Hide/expand global item'),
        'class' => 'MidtLinkFacetapiFilterHideGlobal',
        'query types' => array('term'),
      ),
    ),
  );
}

/**
* Implements hook_facetapi_sort_info().
*/
function midtlink_utils_facetapi_sort_info() {
  $sorts = array();

  $sorts['global_local'] = array(
    'label' => t('Global/Local sort order'),
    'callback' => 'midtlink_utils_facetapi_sort_global_local',
    'description' => t('Sort global keywords first, followed by local ones.'),
    'weight' => -50,
  );

  return $sorts;
}

/**
* Sort by the top-level items first.
*/
function midtlink_utils_facetapi_sort_global_local(array $a, array $b) {
  if (!empty($a['#item_children'])) {
    return -1;
  } else {
    return 1;
  }
}

function midtlink_utils_form_apachesolr_search_custom_page_search_form_alter(&$form, &$form_state) {
  if (isset($form['basic']['retain-filters'])) {
    $form['basic']['retain-filters']['#title'] = 'Behold aktuelt filter ved ny søgning';
  }

  return $form;
}

function midtlink_utils_apachesolr_query_alter(&$query) {
  // Filter queries by site hash
  $query->addFilter('hash', apachesolr_site_hash());
}

function midtlink_utils_apachesolr_delete_by_query(&$query) {
  // Filter index delete by site hash
  $query = 'hash:' . apachesolr_site_hash();
}

function midtlink_utils_menu() {
	$items['betingelser'] = array(
		'title' => 'Brugerbetingelser for MidtLink', 
    'page callback' => 'midtlink_utils_terms', 
    'access callback' => true,
    'type' => MENU_CALLBACK,
	);
	return $items;
}


/**
 * Implements hook_menu_alter().
 */
function midtlink_utils_menu_alter(&$items) {
//  var_dump($items);
  // Disable 'Tag' tab
  unset($items['node/%node/tag']);
}


function midtlink_utils_render_blocks($region) {
  if ($list = block_list($region)) {
    $build = _block_get_renderable_array($list);
    return render($build);
  }
}

function midtlink_utils_terms() {
  return midtlink_utils_render_blocks("betingelser");
}

/**
 * Get the main unit (Afdeling)'s term, given the local keyword's tid.
 * @param type $tid local keyword tid
 */
function midtlink_get_main_unit_from_local_keyword($tid) {
  $parents = taxonomy_get_parents($tid);
  if (!empty($parents)) {
    $first = array_shift($parents);
    if ($first->name == 'Global') {
      return null;
    }
    return array_shift(taxonomy_get_term_by_name($first->name, "units"));
  }
}

/**
 * Get the main unit (Afdeling)'s term object, given the subunit's tid.
 * Returns the same unit id if it has no parents.
 * @param type $tid subunit's tid
 */
function midtlink_get_main_unit_from_subunit($tid) {
  $parents = taxonomy_get_parents($tid);
  if (!empty($parents)) {
    $first = array_shift($parents);
    return $first;
  } else {
    return taxonomy_term_load($tid);
  }
}

function midtlink_is_keyword_local($tid) {
  $parents = taxonomy_get_parents($tid);
  if (!empty($parents)) {
    $first = array_shift($parents);
    if ($first->name == 'Global') {
      return false;
    } else {
      return true;
    }
  } else {
    return false;
  }
}

function midtlink_get_local_and_global_keywords($unit) {
  $global_categories = midtlink_get_global_keywords();
  $local_categories = midtlink_get_keywords_by_unit($unit);
  return array_merge($global_categories, $local_categories);
}

function midtlink_get_local_and_global_keyword_tree($unit) {
  $global_categories = midtlink_get_global_keywords();
  $local_categories = midtlink_get_keywords_by_unit($unit);
  $tree = array();
  $tree['Global'] = $global_categories;
  $tree[$unit] = $local_categories;
  return $tree;
}

function midtlink_get_global_keywords() {
  $terms = taxonomy_get_term_by_name("Global", "category");
  if (!empty($terms) && count($terms) == 1) {
    $global_term = array_shift($terms);
    return taxonomy_get_tree($global_term->vid, $global_term->tid);
  } else {
    return array();
  }
}

function midtlink_get_keyword_tree() {
  return taxonomy_get_tree(3);
}

function midtlink_get_keywords_by_unit_id($unit) {
  $term = taxonomy_term_load($unit);
  if ($term) {
    return midtlink_get_keywords_by_unit($term->name);
  } else {
    return array();
  }
}

/**
 * 
 * @param string $unit Name of unit
 * @return array
 */
function midtlink_get_keywords_by_unit($unit) {
  $terms = taxonomy_get_term_by_name($unit, "category");
  if (!empty($terms)) {
    foreach ($terms as $local_term) {
      $parents = taxonomy_get_parents($local_term->tid);
      if (empty($parents)) {
        return taxonomy_get_tree($local_term->vid, $local_term->tid);
      }
    }
  } else {
    return array();
  }
  return array();
}

function midtlink_get_unit_tree($getChildren = TRUE) {
	global $user;
	$out = array();
	
	/* Get a sorted MainUnit list */
	$units = taxonomy_get_tree(4,0,1);
	if(!empty($user->mainUnitTID)) {
		foreach($units as $k=>$u) {
			if($u->tid == $user->mainUnitTID) {
				$out[$u->tid] = array();
				$out[$u->tid]['units'] = array();
				$out[$u->tid]['name'] = $u->name;
				unset($units[$k]);
			}
		}
	}
	foreach($units as $u) {
		$out[$u->tid] = array();
		$out[$u->tid]['units'] = array();
		$out[$u->tid]['name'] = $u->name;
	}
	
        if ($getChildren) {
            foreach($out as $tid=>$u) {
                    $terms = taxonomy_get_children($tid,4);
                    foreach($terms as $t) {
                            $out[$tid]['units'][$t->tid] = $t->name;
                    }
        	}
        }
        
	return $out;
}

function midtlink_utils_get_links($unitTid) {
  $sql = "SELECT fl.field_link_url as url, fl.field_link_title title, fld.field_link_desc_value as link_desc
    FROM node n
    INNER JOIN field_data_field_link fl ON fl.entity_type = 'node' AND fl.bundle = 'link' AND fl.entity_id = n.nid
    LEFT JOIN field_data_field_link_desc fld ON fld.entity_type = 'node' AND fld.bundle = 'link' AND fld.entity_id = n.nid
    LEFT JOIN field_data_field_link_unit flu ON flu.entity_type = 'node' AND flu.bundle = 'link' AND flu.entity_id = n.nid
    WHERE n.type = 'link' AND n.status = 1  AND flu.field_link_unit_target_id IS NULL
    ORDER BY n.created DESC";

  $res_global = array();
  $res = db_query($sql);
  if ($res) {
    $res_global = $res->fetchAll();
  }

  $sql = "SELECT fl.field_link_url as url, fl.field_link_title title, fld.field_link_desc_value as link_desc
    FROM node n
    INNER JOIN field_data_field_link fl ON fl.entity_type = 'node' AND fl.bundle = 'link' AND fl.entity_id = n.nid
    LEFT JOIN field_data_field_link_desc fld ON fld.entity_type = 'node' AND fld.bundle = 'link' AND fld.entity_id = n.nid
    LEFT JOIN field_data_field_link_unit flu ON flu.entity_type = 'node' AND flu.bundle = 'link' AND flu.entity_id = n.nid
    WHERE n.type = 'link' AND n.status = 1 AND flu.field_link_unit_target_id = :unit
    ORDER BY n.created DESC";

  global $user;

  $res_local = array();
  $res = db_query($sql, array(':unit' => $unitTid));
  if ($res) {
    $res_local = $res->fetchAll();
  }

  return array_merge($res_local, $res_global);
}

function midtlink_get_approved_answer($nid) {
	$sql = "SELECT c.cid
			FROM {comment} c
			INNER JOIN {node} n ON n.nid = c.nid
			INNER JOIN {flag_content} fc ON fc.fid = :fid AND fc.content_type = 'comment' AND fc.content_id = c.cid
			WHERE n.nid = :nid
			ORDER BY c.created ASC LIMIT 1";
		$result = db_query($sql,array(':fid'=>FLAG_ID_COMMENT_APPROVED,':nid'=>$nid));
		if($result->rowCount() > 0) {
			return $result->fetchColumn(0);
		}
		return false;
}


function midtlink_utils_form_alter(&$form, &$form_state, $form_id) {
	if($form_id == 'forward_form') {
		$form['message']['recipients']['#rows'] = 1;
		$form['message']['message']['#rows'] = 4;
	}
	elseif($form_id == 'comment_node_post_form') {
		$form['actions']['submit']['#value'] = 'Indsend svar';
	}
	elseif($form_id == 'user_profile_form') {
		$form['account']['mail']['#disabled'] = true;
		$form['account']['mail']['#description'] = t('E-mail-adressen hvortil der sendes notifikationer. <strong>Kan ikke ændres</strong>');
		$form['account']['pass']['#access'] = false;
		$form['account']['current_pass']['#access'] = false;
		$form['picture']['#access'] = false;
		$form['field_position']['#access'] = false; //Updated through the BSK integration
	}
	elseif($form_id == 'knowlegde_node_form') {
    // Hide additional settings
    $form['additional_settings']['#access'] = false;
    
    // Only hide on add form, not on edit
    if (arg(1) == 'add') {
      // Hide choice of unit on Create Vejledning form
      $form['field_unit']['#access'] = false;
    } else {
      // On Edit form, show only the main units
      $mainUnits = midtlink_get_unit_tree(FALSE);
      foreach($mainUnits as $tid => $term) {
        $mainUnitOptions[$tid] = $term['name'];
      }
    
      $form['field_unit']['und']['#options'] = $mainUnitOptions;
    }
    
    // Hide old field, in case we haven't removed it
    $form['field_knowlegde_unit']['#access'] = false;
    // Hide old field, in case we haven't removed it
    $form['field_knowlegde_unit_ref']['#access'] = false;
    
    $categoryOptions = array();
    
    $categories = midtlink_get_global_keywords();
    foreach($categories as $i) {
      $categoryOptions[$i->tid] = $i->name;
    }
      
    $form['field_category']['und']['#options'] = $categoryOptions;
    
    $form['field_category_local'] = $form['field_category'];
    $form['field_category_local']['#weight'] += 1;
    
    $categoryOptions = array();
       
    if (arg(1) == 'add') {
      // On Create form, show the user's main unit's local keywords
      global $user;
      $mainUnitName = $user->mainUnitName;
      $categories = midtlink_get_keywords_by_unit($mainUnitName);
    } else {
      // On Edit form, show only the post's unit's local keywords
      $postUnitTID = (int)$form['#node']->field_unit['und'][0]['tid'];
      $mainUnitTerm = midtlink_get_main_unit_from_subunit($postUnitTID);
      $postMainUnitTID = $mainUnitTerm->tid;
      $mainUnitName = $mainUnitTerm->name;
      $categories = midtlink_get_keywords_by_unit_id($postMainUnitTID);
    }
  
    $form['field_category_local']['und']['#title'] = 'Lokale Emner for ' . $mainUnitName;
    
    
    foreach($categories as $i) {
      $categoryOptions[$i->tid] = $i->name;
    }
    
    $form['field_category_local']['und']['#options'] = $categoryOptions;
    
    // Hide local emner field if it's empty
    if (empty($categoryOptions)) {
      $form['field_category_local']['und']['#access'] = false;
    }
	}
}

function midtlink_utils_node_validate($node, $form, &$form_state) {
  if ($form['#form_id'] == 'knowlegde_node_form') {
    if (arg(1) == 'add') {
      global $user;
      // Automatically set the newly created Vejledning to the user's main unit
      $value[] = array('tid' => $user->mainUnitTID);
      form_set_value($form['field_unit']['und'], $value, $form_state);
    }
    $form_state['values']['status'] = 1; // always published;
    
    
    $value = array_merge($form_state['values']['field_category']['und'], $form_state['values']['field_category_local']['und']);
    form_set_value($form['field_category']['und'], $value, $form_state);
  }
}

function midtlink_utils_comment_approved($cid) {
	$sql = "SELECT timestamp FROM {flag_content}
		WHERE fid = :fid AND content_type = 'comment' AND content_id = :cid";
	$result = db_query($sql,array(':fid'=>FLAG_ID_COMMENT_APPROVED,':cid'=>$cid));
	if($result->rowCount() > 0) {
		return $result->fetchColumn(0);
	}
	return false;
}

function midtlink_utils_comment_archived($cid) {
	$sql = "SELECT timestamp FROM {flag_content}
		WHERE fid = :fid AND content_type = 'comment' AND content_id = :cid";
	$result = db_query($sql,array(':fid'=>FLAG_ID_COMMENT_ARCHIVED,':cid'=>$cid));
	if($result->rowCount() > 0) {
		return $result->fetchColumn(0);
	}
	return false;
}


function midtlink_utils_post_approved_answer($nid) {
	$sql ="SELECT c.cid
		FROM comment c, flag_content f
		WHERE c.cid = f.content_id
		AND f.content_type = 'comment' 
		AND f.fid = :fid 
		AND c.nid = :nid
		ORDER BY f.timestamp ASC LIMIT 1";
	$result = db_query($sql,array(':fid'=>FLAG_ID_COMMENT_APPROVED,':nid'=>$nid));
	if($result->rowCount() > 0) {
		return $result->fetchColumn(0);
	}
	return false;
}


function midtlink_utils_get_approved_solution($nid) {
		$sql ="SELECT fc.comment_body_value
		FROM comment c, field_data_comment_body fc, flag_content f
		WHERE c.cid = f.content_id AND fc.entity_id = c.cid
		AND f.content_type = 'comment' 
		AND f.fid = :fid 
		AND c.nid = :nid
		ORDER BY f.timestamp ASC LIMIT 1";
	$result = db_query($sql,array(':fid'=>FLAG_ID_COMMENT_APPROVED,':nid'=>$nid));
	if($result->rowCount() > 0) {
		return $result->fetchColumn(0);
	}
	return false;
}

function midtlink_utils_get_responsible_by_nid($nid) {
	$resp = array();
	
	$sql = "SELECT u.name, ff.field_fullname_value as fullname, td.name as unit, u.uid
		FROM field_data_field_responsible  fr
		LEFT JOIN users u ON u.uid = fr.field_responsible_target_id
		LEFT JOIN field_data_field_fullname ff ON ff.entity_type = 'user' AND ff.entity_id = u.uid
		LEFT JOIN field_data_field_unit fu ON fu.entity_type = 'user' AND fu.entity_id = u.uid
		LEFT JOIN taxonomy_term_data td ON td.tid = fu.field_unit_tid 
		WHERE fr.entity_id = :nid";
	$res = db_query($sql,array(':nid'=>$nid));
	if($res->rowCount() > 0) {
		foreach($res as $r) {
			$resp[drupal_strtolower($r->name)] = array('uid'=>$r->uid,'fullname'=>$r->fullname,'username'=>$r->name,'unit'=>$r->unit); 
		}
	}
	return $resp;
}

function midtlink_utils_last_answer($nid) {
	$sql = "SELECT comment_count, last_comment_timestamp as lc
		FROM {node_comment_statistics} WHERE nid = ".$nid;
	$result = db_query($sql,array(':nid'=>$nid));
	
	//var_dump($result->fetchColumn(1));
	
	if($result->rowCount() > 0) {
		$r = $result->fetchObject();
		if((int)$r->comment_count > 0) {
			return $r->lc;
		}
	}
	return false;
}

function midtlink_utils_get_categories_by_nid($nid) {
	$categories = array();
	$sql = "SELECT td.name, td.tid FROM
		taxonomy_term_data td, taxonomy_index ti
		WHERE td.tid = ti.tid AND ti.nid = :nid AND td.vid = 3";
	$result = db_query($sql,array(':nid'=>$nid));
	foreach($result as $r) { $categories[$r->tid] = $r->name; }
	return $categories;
}

function midtlink_get_main_unit($tid) {
	$mainUnit = $tid;
	
	$sql = "SELECT parent FROM {taxonomy_term_hierarchy}
			WHERE tid = :tid";
	$parent = db_query($sql,array(':tid'=>$tid))->fetchColumn(0);
	if($parent > 0) { $mainUnit = $parent; }
	
	$sql = "SELECT td.name, td.tid, f.field_shortname_value as shortname
		FROM taxonomy_term_data td 
		LEFT JOIN field_data_field_shortname f ON f.entity_id = td.tid AND f.entity_type = 'taxonomy_term'
		WHERE td.tid = :tid";
	$r = db_query($sql,array(':tid'=>$mainUnit))->fetchObject();
	return $r;
}

function midtlink_utils_get_author_info($uid) {
	$o = array();
  $sql = "SELECT fp.field_position_value as position, td.name as unit, td.tid
			FROM users u
				LEFT JOIN field_data_field_position fp ON fp.entity_type = 'user' AND fp.bundle = 'user' AND fp.entity_id = u.uid
				LEFT JOIN field_data_field_unit fu ON fu.entity_type = 'user' AND fu.bundle = 'user' AND fu.entity_id = u.uid
				LEFT JOIN taxonomy_term_data td ON td.tid = fu.field_unit_tid
			WHERE uid = :uid LIMIT 1";
	$r = db_query($sql,array(':uid'=>$uid))->fetchObject();
	if(trim($r->position) != '') { $o[] = $r->position; }
	if(trim($r->unit) != '') { $o[] = $r->unit; }
	$mainUnit = midtlink_get_main_unit($r->tid);
	$shortName = '';
	if($r->tid != $mainUnit->tid) {
		$o[] = $mainUnit->shortname;
		$shortName = $mainUnit->shortname;
	}
	$o = implode(', ',$o);
  if(trim($o) == '') { $o = 'Ukendt'; } 
  
  
  return array('info'=>$o,'shortname'=>$shortName);
}


function midtlink_utils_node_view($node, $build_mode = 'full') {
  $o = array();
  if($node->type=='post' && $node->uid > 0) {
		$sql = "SELECT fp.field_position_value as position, td.name as unit, td.tid
			FROM users u
				LEFT JOIN field_data_field_position fp ON fp.entity_type = 'user' AND fp.bundle = 'user' AND fp.entity_id = u.uid
				LEFT JOIN field_data_field_unit fu ON fu.entity_type = 'user' AND fu.bundle = 'user' AND fu.entity_id = u.uid
				LEFT JOIN taxonomy_term_data td ON td.tid = fu.field_unit_tid
			WHERE uid = :uid LIMIT 1";
		$r = db_query($sql,array(':uid'=>$node->uid))->fetchObject();
    if(trim($r->position) != '') { $o[] = $r->position; }
    if(trim($r->unit) != '') { $o[] = $r->unit; }
		
		$mainUnit = midtlink_get_main_unit($r->tid);
		if($r->tid != $mainUnit->tid) {
			$o[] = $mainUnit->shortname;
		}
		$node->authorunit['name'] = $mainUnit->name;
		$node->authorunit['shortname'] = $mainUnit->shortname;
		$node->authorunit['tid'] = $mainUnit->tid;
  }
  $o = implode(', ',$o);
  if(trim($o) == '') { $o = 'Ukendt'; }  
  $node->authorinfo = $o;
}
function midtlink_utils_comment_view($comment, $view_mode, $langcode) {
	$o = array();
  if($comment->uid > 0) {
		$sql = "SELECT fp.field_position_value as position, td.name as unit, td.tid
			FROM users u
				LEFT JOIN field_data_field_position fp ON fp.entity_type = 'user' AND fp.bundle = 'user' AND fp.entity_id = u.uid
				LEFT JOIN field_data_field_unit fu ON fu.entity_type = 'user' AND fu.bundle = 'user' AND fu.entity_id = u.uid
				LEFT JOIN taxonomy_term_data td ON td.tid = fu.field_unit_tid
			WHERE uid = :uid LIMIT 1";
		$r = db_query($sql,array(':uid'=>$comment->uid))->fetchObject();
    if(trim($r->position) != '') { $o[] = trim($r->position); }
    if(trim($r->unit) != '') { $o[] = trim($r->unit); }
    
    $mainUnit = midtlink_get_main_unit($r->tid);
		if($r->tid != $mainUnit->tid) {
			$o[] = $mainUnit->shortname;
		}
		$comment->authorunit['name'] = $mainUnit->name;
		$comment->authorunit['shortname'] = $mainUnit->shortname;
		$comment->authorunit['tid'] = $mainUnit->tid;
		
  }
  $o = implode(', ',$o);
  if(trim($o) == '') { $o = 'Ukendt'; }  
  $comment->authorinfo = $o;
}


function midtlink_utils_init() {
	global $user;
	$mainUnitTID = 0;
	$mainUnitName = '';
	$mainUnitShortname = '';
	$unitName = '';
	$unitTID = 0;
	$sql = "SELECT td.name as unit, td.tid
			FROM users u
				LEFT JOIN field_data_field_unit fu ON fu.entity_type = 'user' AND fu.bundle = 'user' AND fu.entity_id = u.uid
				LEFT JOIN taxonomy_term_data td ON td.tid = fu.field_unit_tid
			WHERE uid = :uid LIMIT 1";
	$res = db_query($sql,array(':uid'=>$user->uid));
	if($res->rowCount() > 0) {
		$r = $res->fetchObject();
		$unitName = $r->unit;
		$unitTID = $r->tid;
		
		$mainUnit = midtlink_get_main_unit($r->tid);
		if($mainUnit && $r->tid != $mainUnit->tid) {
			$mainUnitTID = $mainUnit->tid;
			$mainUnitName = $mainUnit->name;
			$mainUnitShortname = $mainUnit->shortname;
		}
	}
	$user->mainUnitTID = $mainUnitTID;
	$user->mainUnitName = $mainUnitName;
	$user->mainUnitShortname = $mainUnitShortname;
	$user->unitName = $unitName;
	$user->unitTID = $unitTID;
	
	if(arg(0) == 'dokumentation' && arg(1) == '') {
		$goto = '300';
		if($mainUnitTID != '' && $mainUnitTID != 0) {
			$goto = $mainUnitTID;
		}
		drupal_goto('dokumentation/'.$goto);
	}	
	
	if(arg(0) == 'forum' && empty($_GET['tid'])) {
		$goto = '300';
		if($mainUnitTID != '' && $mainUnitTID != 0) {
			$goto = $mainUnitTID;
		}
		drupal_goto($_GET['q'],array('query'=>array('tid'=>$mainUnitTID)));
	}
		
}
